// app/supabase-test/check.tsx
import { cookies } from 'next/headers'
import { createServerClient } from '@supabase/ssr'

export const dynamic = 'force-dynamic'

export default async function CheckConfig() {
  const cookieStore = cookies()
  
  try {
    const supabase = createServerClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL!,
      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,
      {
        cookies: {
          get(name: string) {
            return cookieStore.get(name)?.value
          },
          set(name: string, value: string, options: any) {
            cookieStore.set({ name, value, ...options })
          },
          remove(name: string, options: any) {
            cookieStore.delete({ name, ...options })
          },
        },
      }
    )

    // Test connection
    const { data, error } = await supabase.from('_health').select('*').limit(1)
    
    return (
      <div className="p-4">
        <h1 className="text-xl font-bold mb-4">Supabase Configuration Check</h1>
        <pre className="bg-gray-100 p-4 rounded">
          {JSON.stringify({
            supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL,
            hasAnonKey: !!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,
            connectionTest: error ? 'Failed' : 'Success',
            error: error?.message || null
          }, null, 2)}
        </pre>
      </div>
    )
  } catch (error) {
    return (
      <div className="p-4 bg-red-50 text-red-700">
        <h1 className="text-xl font-bold mb-4">Configuration Error</h1>
        <pre>{JSON.stringify(error, null, 2)}</pre>
      </div>
    )
  }
}